{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","services/gallery-api.js","components/Button/Button.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","handleChange","useCallback","e","currentTarget","value","handleSubmit","preventDefault","className","type","autoComplete","autoFocus","placeholder","onChange","ImageGalleryItem","id","webformatURL","toggleModal","setCurrentLargeImageURL","index","onClick","src","alt","galleryApi","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","Button","Modal","onClose","largeImageURL","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","ImageGallery","images","setImages","setCurrentPage","setSearchQuery","isLoading","setIsLoading","error","setError","showModal","setShowModal","currentLargeImageURL","findCurrentLargeImageURL","currentImage","find","image","onChangeQuery","options","prevImages","length","toastr","catch","message","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","fetchImages","shouldRenderLoadMoreButton","map","shortid","generate","color","height","width","prevPage","App","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c57e7d75.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport './Searchbar.scss';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = useCallback(e => {\r\n    setQuery(e.currentTarget.value);\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      onSubmit(query);\r\n      setQuery('');\r\n    },\r\n    [onSubmit, query],\r\n  );\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './ImageGalleryItem.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({\r\n  id,\r\n  webformatURL,\r\n  toggleModal,\r\n  setCurrentLargeImageURL,\r\n}) => {\r\n  return (\r\n    <li\r\n      index={id}\r\n      className=\"ImageGalleryItem\"\r\n      onClick={() => {\r\n        toggleModal();\r\n        setCurrentLargeImageURL(id);\r\n      }}\r\n    >\r\n      <img src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  setCurrentLargeImageURL: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '12798852-7489cd1b3c3d687fea55036ed';\r\n\r\nconst galleryApi = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}\r\n          &key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default galleryApi;\r\n","import React from 'react';\r\nimport './Button.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        onClick();\r\n      }}\r\n      type=\"button\"\r\n      className=\"Button\"\r\n    >\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect } from 'react';\r\nimport './Modal.scss';\r\n\r\nexport default function Modal({ onClose, largeImageURL }) {\r\n  useEffect(() => {\r\n    const handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [onClose]);\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={onClose}>\r\n      <div className=\"Modal\">\r\n        <img src={largeImageURL} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './ImageGallery.scss';\r\nimport Searchbar from '../Searchbar';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport galleryApi from '../../services/gallery-api';\r\nimport Button from '../Button';\r\nimport Loader from 'react-loader-spinner';\r\nimport Modal from '../Modal';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport shortid from 'shortid';\r\nimport toastr from 'toastr';\r\ntoastr.options = {\r\n  closeButton: false,\r\n  debug: false,\r\n  newestOnTop: false,\r\n  progressBar: false,\r\n  positionClass: 'toast-top-center',\r\n  preventDuplicates: false,\r\n  onclick: null,\r\n  showDuration: '300',\r\n  hideDuration: '1000',\r\n  timeOut: '5000',\r\n  extendedTimeOut: '1000',\r\n  showEasing: 'swing',\r\n  hideEasing: 'linear',\r\n  showMethod: 'fadeIn',\r\n  hideMethod: 'fadeOut',\r\n};\r\n\r\nexport default function ImageGallery() {\r\n  const [images, setImages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currentLargeImageURL, setCurrentLargeImageURL] = useState('');\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const findCurrentLargeImageURL = id => {\r\n    let currentImage = images.find(image => image.id === id);\r\n    setCurrentLargeImageURL(currentImage.largeImageURL);\r\n  };\r\n\r\n  const onChangeQuery = useCallback(query => {\r\n    setSearchQuery(query);\r\n    setCurrentPage(1);\r\n    setImages([]);\r\n    setError(null);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n    const fetchImages = () => {\r\n      const options = {\r\n        searchQuery,\r\n        currentPage,\r\n      };\r\n\r\n      setIsLoading(true);\r\n\r\n      galleryApi(options)\r\n        .then(images => {\r\n          setImages(prevImages => [...prevImages, ...images]);\r\n          if (images.length === 0) {\r\n            toastr['warning']('No results found!');\r\n          }\r\n        })\r\n        .catch(error => setError(error.message))\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n          if (currentPage > 1) {\r\n            window.scrollTo({\r\n              top: document.documentElement.scrollHeight,\r\n              behavior: 'smooth',\r\n            });\r\n          }\r\n        });\r\n    };\r\n    fetchImages();\r\n  }, [currentPage, searchQuery]);\r\n\r\n  const updatePage = () => {\r\n    setCurrentPage(prevPage => prevPage + 1);\r\n  };\r\n\r\n  const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <Modal onClose={toggleModal} largeImageURL={currentLargeImageURL} />\r\n      )}\r\n      <Searchbar onSubmit={onChangeQuery} />\r\n      <ul className=\"ImageGallery\">\r\n        {images.map(({ id, webformatURL }) => (\r\n          <ImageGalleryItem\r\n            id={id}\r\n            key={shortid.generate()}\r\n            webformatURL={webformatURL}\r\n            toggleModal={toggleModal}\r\n            setCurrentLargeImageURL={findCurrentLargeImageURL}\r\n          />\r\n        ))}\r\n      </ul>\r\n      {error && <h2>Извините, что-то пошло не так</h2>}\r\n      {isLoading && (\r\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n      )}\r\n      {shouldRenderLoadMoreButton && <Button onClick={updatePage} />}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport './styles.css';\n\nimport ImageGallery from './components/ImageGallery';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ImageGallery />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}